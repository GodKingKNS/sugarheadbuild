{"version":3,"file":"static/js/375.01f0f9b8.chunk.js","mappings":"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","sources":["utils/alchemy.js","pages/AnalyticsPage/Vault/index.jsx","pages/AnalyticsPage/index.jsx"],"sourcesContent":["import { Alchemy, Network } from 'alchemy-sdk';\n\nconst configAlchemy = {\n  apiKey: '6J04CoEooT-xq4ZMGdbAeY1VcNBsAEPt',\n  network: Network.ETH_MAINNET,\n};\n\nconst alchemy = new Alchemy(configAlchemy);\n\nexport const getFloorPrice = async () => {\n  const address = '0x6B302B295955954311e4622BDCCCCF52796422fA';\n  const { openSea } = await alchemy.nft.getFloorPrice(address);\n  return openSea.floorPrice;\n};\n","import exitImg from 'assets/images/exit.png';\nimport vaultImage from 'assets/images/vault_team_noletter.jpg';\n// import Timer from 'components/Timer';\nimport config from 'config';\nimport { useDisconnectWallet } from 'hooks';\nimport useFetch from 'hooks/useFetch';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  CartesianGrid,\n  // Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport { assetService } from 'services/blockchain/assetService';\nimport { store } from 'store';\nimport { useAppSelector } from 'store';\nimport { setTokenIds, setUsedTokenIdsOf } from 'store/actions/globalActions';\nimport { getFloorPrice } from 'utils/alchemy';\n\nimport { Box, Button, Link, Typography } from '@mui/material';\nimport { useWeb3React } from '@web3-react/core';\n\nconst PRICE_URL = 'https://api.coingecko.com/api/v3/coins/';\nconst TYPE_PERIOD = '/market_chart?vs_currency=usd&days=30/interval=1m';\n\nconst CustomFloorTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <Box sx={{ padding: '10px' }}>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            color: '#db9b13',\n            textDecoration: 'none',\n            fontSize: 16,\n          }}\n        >\n          Time: {label}\n        </Typography>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            color: '#db9b13',\n            textDecoration: 'none',\n            fontSize: 16,\n          }}\n        >\n          $ USD: {payload[0].value}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return null;\n};\n\nconst CustomVaultTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <Box sx={{ padding: '10px' }}>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            color: '#db9b13',\n            textDecoration: 'none',\n            fontSize: 16,\n          }}\n        >\n          Time: {label}\n        </Typography>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            color: '#db9b13',\n            textDecoration: 'none',\n            fontSize: 16,\n          }}\n        >\n          $ USD: {payload[0].value.toFixed(2)}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return null;\n};\n\nfunction Vault({ sx }) {\n  const [prices, setPrices] = useState();\n  const [floorPrices, setFloorPrices] = useState();\n  const [floor, setFloor] = useState();\n  const [tvcl, setTVCL] = useState();\n  const [amountList, setAmountList] = useState();\n  const [ethPrice, setEthPrice] = useState(0);\n\n  const coinlist = [\n    'chainlink',\n    'shiba-inu',\n    'dogelon-mars',\n    'pax-gold',\n    'quant-network',\n    'hex',\n    'usd-coin',\n    'old-bitcoin',\n    'laika',\n    'ethereum',\n  ];\n\n  const getPriceData = async (coin) => {\n    const res = await fetch(`${PRICE_URL}${coin}${TYPE_PERIOD}`, {\n      mode: 'cors',\n      // credentials: 'include',\n    });\n    const { prices } = await res.json();\n    return prices;\n  };\n\n  const getFloorData = async () => {\n    const res = await fetch(`${config.apiBaseURL}floor`, {\n      mode: 'cors',\n      // credentials: 'include',\n    });\n    const prices = await res.json();\n    return prices;\n  };\n\n  const coinPromises = coinlist.map((coin) => getPriceData(coin));\n\n  const { active, account } = useWeb3React();\n  const { tokenIds, claimable, usedTokenIdsOf } = useAppSelector((state) => state.global);\n  const disconnectWallet = useDisconnectWallet();\n  const { data } = useFetch(`${config.apiBaseURL}coins`);\n  // const time = useFetch(`${config.apiBaseURL}time`);\n\n  // useEffect(() => {\n  //   setCoins();\n  // }, []);\n\n  // const getTokenBalance = async (address) => {\n  //   const balance = parseInt(await assetService.getAssetBalance(address));\n  //   console.log('bal', balance, address);\n  //   return balance;\n  // };\n\n  const getAll = async () => {\n    const floorData = await getFloorData();\n    const floorValues = floorData.reverse().map((data) => {\n      return {\n        name: moment.unix(data.timestamp).format('HH:mm'),\n        floor: (data.eth * data.price).toFixed(2),\n      };\n    });\n    setFloorPrices(floorValues);\n\n    const res = await Promise.all(coinPromises);\n    const lengths = res.map((item) => item.length);\n    const minLength = Math.min(...lengths);\n    const newRes = res.map((item) => item.map((val) => val[1]));\n\n    let data = [];\n    for (let i = 0; i < minLength; i++) {\n      data.push({\n        chainlink: newRes[0][i],\n        'shiba-inu': newRes[1][i],\n        'dogelon-mars': newRes[2][i],\n        'pax-gold': newRes[3][i],\n        'quant-network': newRes[4][i],\n        hex: newRes[5][i],\n        'usd-coin': newRes[6][i],\n        'old-bitcoin': newRes[7][i],\n        laika: newRes[8][i],\n        ethereum: newRes[9][i],\n      });\n    }\n    // get latest price and calculate the proportion for each asset\n    const latest = minLength - 1;\n    let totalAmount =\n      data[latest]['chainlink'] * 408 +\n      data[latest]['shiba-inu'] * 100902622 +\n      data[latest]['dogelon-mars'] * 3445238310 +\n      data[latest]['pax-gold'] * 0.55 +\n      data[latest]['quant-network'] * 21.5 +\n      data[latest]['hex'] * 28404 +\n      data[latest]['laika'] * 17412306698 +\n      data[latest]['old-bitcoin'] * 27288 +\n      data[latest]['usd-coin'] * 1000;\n    setTVCL(totalAmount);\n    let assetAmountList = {\n      chainlink: data[latest]['chainlink'] * 408,\n      'shiba-inu': data[latest]['shiba-inu'] * 100902622,\n      'dogelon-mars': data[latest]['dogelon-mars'] * 3445238310,\n      'pax-gold': data[latest]['pax-gold'] * 0.55,\n      'quant-network': data[latest]['quant-network'] * 21.5,\n      hex: data[latest]['hex'] * 28404,\n      laika: data[latest]['laika'] * 17412306698,\n      'old-bitcoin': data[latest]['old-bitcoin'] * 27288,\n      'usd-coin': data[latest]['usd-coin'] * 1000,\n    };\n    setAmountList(assetAmountList);\n    setEthPrice(data[latest]['ethereum']);\n    const newUSD = data.map((item, index) => {\n      // console.log(\n      //   index,\n      //   moment()\n      //     .subtract(minLength - index, 'days')\n      //     .format('DD MMM')\n      // );\n      return {\n        name:\n          moment()\n            .subtract(minLength - index, 'days')\n            .date() == 1\n            ? moment()\n                .subtract(minLength - index, 'days')\n                .format('D MMM')\n            : moment()\n                .subtract(minLength - index, 'days')\n                .format('D'),\n        Vault:\n          item['chainlink'] * 408 +\n          item['shiba-inu'] * 100902622 +\n          item['dogelon-mars'] * 3445238310 +\n          item['pax-gold'] * 0.55 +\n          item['quant-network'] * 21.5 +\n          item['hex'] * 28404 +\n          item['laika'] * 17412306698 +\n          item['old-bitcoin'] * 27288 +\n          item['usd-coin'] * 1000,\n        // Floor: item['ethereum'] * floor,\n      };\n    });\n    console.log('data', data, newUSD);\n    setPrices(newUSD.slice(-20));\n  };\n\n  const getFloor = async () => {\n    const price = await getFloorPrice();\n    setFloor(price);\n  };\n\n  useEffect(() => {\n    if (active) {\n      store.dispatch(setTokenIds(account));\n      store.dispatch(setUsedTokenIdsOf(account));\n      // config.tokens.map((token) => {\n      //   getTokenBalance(token);\n      // });\n    }\n  }, [active, account]);\n\n  // useEffect(() => {\n  //   // getPriceData('chainlink');\n  // }, []);\n\n  useEffect(() => {\n    console.log('getAll');\n    getFloor();\n    getAll();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const onClaim = async () => {\n    const remain = tokenIds.filter((id) => !usedTokenIdsOf.includes(id));\n    let tx;\n    if (remain.length >= 100) {\n      tx = await assetService.claimAsset(account, remain.slice(0, 100));\n    } else {\n      tx = await assetService.claimAsset(account, remain);\n    }\n    if (tx !== null) {\n      toast.success('Successfully claimed!');\n      store.dispatch(setUsedTokenIdsOf(account));\n      store.dispatch(setTokenIds(account));\n    }\n  };\n\n  const handleExit = async () => {\n    await disconnectWallet();\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundImage: `url(${vaultImage})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center top',\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: '0 0 50px 0',\n        '@media (min-width: 425px)': {\n          padding: '0 0 50px 0',\n        },\n        '@media (min-width: 768px)': {\n          padding: '0 0 50px 0',\n        },\n        '@media (min-width: 1024px)': {\n          padding: '0 0 100px 0',\n        },\n        '@media (min-width: 1440px)': {\n          padding: '0 0 100px 0',\n        },\n        '@media (min-width: 1920px)': {\n          padding: '0 0 100px 0',\n        },\n        marginBottom: '15px',\n        ...sx,\n      }}\n    >\n      {active && (\n        <Box\n          sx={{\n            position: 'absolute',\n            right: '15px',\n            top: '135px',\n            width: '25px',\n            height: '25px',\n            '@media (min-width: 375px)': {\n              right: '25px',\n              top: '135px',\n              width: '30px',\n              height: '30px',\n            },\n            '@media (min-width: 425px)': {\n              right: '25px',\n              top: '120px',\n              width: '30px',\n              height: '30px',\n            },\n            '@media (min-width: 768px)': {\n              right: '35px',\n              top: '175px',\n              width: '45px',\n              height: '45px',\n            },\n            '@media (min-width: 1024px)': {\n              right: '50px',\n              top: '235px',\n              width: '60px',\n            },\n            '@media (min-width: 1440px)': {\n              right: '50px',\n              top: '215px',\n              width: '70px',\n              height: '70px',\n            },\n            '@media (min-width: 1920px)': {\n              right: '70px',\n              top: '240px',\n              width: '80px',\n            },\n            cursor: 'pointer',\n          }}\n          onClick={handleExit}\n        >\n          <Box\n            component=\"img\"\n            src={exitImg}\n            sx={{\n              width: '100%',\n            }}\n          />\n        </Box>\n      )}\n      <Box\n        sx={{\n          padding: '25px 0 40px 0',\n          '@media (min-width: 375px)': {\n            padding: '25px 0 30px 0',\n          },\n          '@media (min-width: 425px)': {\n            padding: '20px 0',\n          },\n          '@media (min-width: 768px)': {\n            padding: '30px 0',\n          },\n          '@media (min-width: 1024px)': {\n            padding: '40px 0',\n          },\n          '@media (min-width: 1440px)': {\n            padding: '15px 0',\n          },\n          '@media (min-width: 1920px)': {\n            padding: '30px 0',\n          },\n        }}\n      >\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            color: '#db9b13',\n            textDecoration: 'none',\n            fontSize: 30,\n            letterSpacing: 7,\n            '@media (min-width: 375px)': {\n              fontSize: 40,\n              letterSpacing: 10,\n            },\n            '@media (min-width: 425px)': {\n              fontSize: 40,\n              letterSpacing: 10,\n            },\n            '@media (min-width: 768px)': {\n              fontSize: 60,\n              letterSpacing: 10,\n            },\n            '@media (min-width: 1024px)': {\n              fontSize: 70,\n              letterSpacing: 10,\n            },\n            '@media (min-width: 1440px)': {\n              fontSize: 90,\n              letterSpacing: 15,\n            },\n            '@media (min-width: 1920px)': {\n              fontSize: 110,\n              letterSpacing: 20,\n            },\n          }}\n        >\n          Analytics Dashboard\n        </Typography>\n      </Box>\n      <Box sx={{ justifyContent: 'flex-start', width: '80%' }}>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            display: 'block',\n            color: 'black',\n            textDecoration: 'none',\n            fontSize: 22,\n            '@media (min-width: 768px)': {\n              WebkitTextStroke: '2px #d89810',\n              fontSize: 32,\n            },\n            '@media (min-width: 1024px)': {\n              fontSize: 42,\n            },\n            WebkitTextStroke: '1px #d89810',\n          }}\n        >\n          Vault\n          <br />\n          Total Claimable Value Locked(TCVL): {`$${tvcl ? tvcl.toFixed(2) : ''}`}\n          <br />\n          Vault Backing Per NFT:{' '}\n          {`$${tvcl ? (tvcl / config.totalSupply).toFixed(2) : ''} / ${\n            ethPrice > 0 ? (tvcl / config.totalSupply / ethPrice).toFixed(3) : ''\n          } ETH`}\n        </Typography>\n      </Box>\n      {!active && (\n        <Box\n          sx={{\n            display: 'grid',\n            rowGap: 2,\n            columnGap: 4,\n            width: '80%',\n            '@media (min-width: 1025px)': {\n              gridTemplateColumns: 'repeat(1, 1fr)',\n            },\n            justifyContent: 'flex-start',\n          }}\n        >\n          {config['assets'] &&\n            config['assets'].map((asset, index) => (\n              <Link\n                key={`Vaults-Link${index}`}\n                target=\"_blank\"\n                href={config['coinGeckoBaseUrl'] + asset['url']}\n                sx={{\n                  fontFamily: 'LapsusBold',\n                  display: 'block',\n                  color: 'black',\n                  textDecoration: 'none',\n                  fontSize: 20,\n                  '@media (min-width: 768px)': {\n                    WebkitTextStroke: '2px #d89810',\n                    fontSize: 30,\n                  },\n                  '@media (min-width: 1024px)': {\n                    fontSize: 40,\n                  },\n                  WebkitTextStroke: '1px #d89810',\n                }}\n              >\n                {`${asset['name']} (${asset['symbol']}) / ${\n                  amountList\n                    ? `$${amountList[asset['url']] ? amountList[asset['url']].toFixed(2) : ''} / ${\n                        amountList[asset['url']]\n                          ? ((amountList[asset['url']] / tvcl) * 100.0).toFixed(2)\n                          : ''\n                      }%`\n                    : ''\n                }`}\n              </Link>\n            ))}\n        </Box>\n      )}\n      {active && (\n        <Box\n          sx={{\n            marginTop: '20px',\n            width: '90%',\n            '@media (min-width: 1024px)': {\n              marginTop: '50px',\n            },\n          }}\n          flex\n          flexBasis=\"column\"\n          alignItems=\"center\"\n        >\n          <Box\n            sx={{\n              maxWidth: '700px',\n              margin: 'auto',\n            }}\n          >\n            {data &&\n              data.map((coin, index) => {\n                if (index === 2) {\n                  return (\n                    <Typography\n                      key={`Asset-${index}`}\n                      sx={{\n                        fontFamily: 'LapsusBold',\n                        fontSize: 23,\n                        '@media (min-width: 425px)': {\n                          fontSize: 25,\n                        },\n                        '@media (min-width: 768px)': {\n                          WebkitTextStroke: '2px #d89810',\n                          fontSize: 40,\n                        },\n                        '@media (min-width: 1024px)': {\n                          fontSize: 50,\n                        },\n                        textAlign: 'left',\n                        WebkitTextStroke: '1px #d89810',\n                      }}\n                    >\n                      {`${coin.name}: ${Number(\n                        ((tokenIds.length - usedTokenIdsOf.length) * coin.amount) /\n                          config.totalSupply,\n                      ).toFixed(0)} ${coin.symbol}`}\n                    </Typography>\n                  );\n                } else {\n                  return (\n                    <Typography\n                      key={`Asset-${index}`}\n                      sx={{\n                        fontFamily: 'LapsusBold',\n                        fontSize: 23,\n                        '@media (min-width: 425px)': {\n                          fontSize: 25,\n                        },\n                        '@media (min-width: 768px)': {\n                          WebkitTextStroke: '2px #d89810',\n                          fontSize: 40,\n                        },\n                        '@media (min-width: 1024px)': {\n                          fontSize: 50,\n                        },\n                        textAlign: 'left',\n                        WebkitTextStroke: '1px #d89810',\n                      }}\n                    >\n                      {`${coin.name}: ${Number(\n                        ((tokenIds.length - usedTokenIdsOf.length) * coin.amount) /\n                          config.totalSupply,\n                      ).toFixed(4)} ${coin.symbol}`}\n                    </Typography>\n                  );\n                }\n              })}\n          </Box>\n          <Box textAlign=\"center\">\n            <Button\n              sx={{\n                marginTop: '30px',\n                cursor: 'pointer',\n                width: '70%',\n                fontFamily: 'LapsusBold',\n                fontSize: '20px',\n                padding: '15px 10px',\n                '@media (min-width: 768px)': {\n                  marginTop: '70px',\n                  fontSize: 40,\n                },\n                '@media (min-width: 1024px)': {\n                  fontSize: 50,\n                },\n                color: '#fac718',\n                backgroundColor: 'black',\n                border: '10px solid white',\n                borderRadius: '60px',\n                maxWidth: '900px',\n                lineHeight: '1',\n                letterSpacing: '7px',\n                transform: 'rotate(-5deg)',\n                opacity: claimable && tokenIds.length - usedTokenIdsOf.length !== 0 ? 1 : 0.3,\n                '&:disabled': {\n                  color: '#fac718',\n                },\n                '&:hover': {\n                  backgroundColor: 'rgba(0, 0, 0, 0.7)',\n                },\n              }}\n              onClick={onClaim}\n              disabled={!claimable || tokenIds.length - usedTokenIdsOf.length === 0}\n            >\n              CLAIM YOUR ASSETS NOW\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Box sx={{ justifyContent: 'flex-start', width: '80%' }}>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            display: 'block',\n            color: 'black',\n            textDecoration: 'none',\n            fontSize: 22,\n            '@media (min-width: 768px)': {\n              WebkitTextStroke: '2px #d89810',\n              fontSize: 32,\n            },\n            '@media (min-width: 1024px)': {\n              fontSize: 42,\n            },\n            WebkitTextStroke: '1px #d89810',\n          }}\n        >\n          Sugar Heads Vault Portfolio\n        </Typography>\n      </Box>\n      <ResponsiveContainer width={'80%'} height={300} min-width={300}>\n        <LineChart\n          data={prices}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 15,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#eee\" />\n          <XAxis\n            dataKey=\"name\"\n            stroke=\"#dc982c\"\n            label={{\n              value: 'Time',\n              position: 'center',\n              fill: '#dc982c',\n              transform: 'translate(0, 15)',\n            }}\n            // dy={10}\n            // tick={false}\n          />\n          <YAxis\n            stroke=\"#dc982c\"\n            label={{\n              value: '$ USD',\n              angle: -90,\n              position: 'insideLeft',\n              fill: '#dc982c',\n            }}\n            dx={2}\n            // tick={false}\n          />\n          <Tooltip content={<CustomVaultTooltip />} />\n          <Line type=\"monotone\" dataKey=\"Vault\" stroke=\"#dc982c\" activeDot={{ r: 8 }} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n      <Box sx={{ justifyContent: 'flex-start', width: '80%' }}>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            display: 'block',\n            color: 'black',\n            textDecoration: 'none',\n            fontSize: 22,\n            '@media (min-width: 768px)': {\n              WebkitTextStroke: '2px #d89810',\n              fontSize: 32,\n            },\n            '@media (min-width: 1024px)': {\n              fontSize: 42,\n            },\n            WebkitTextStroke: '1px #d89810',\n          }}\n        >\n          NFT Analytics\n          <br />\n          Floor Price :\n          {` $ ${ethPrice > 0 ? (floor * ethPrice).toFixed(3) : ''} / ${\n            floor ? floor.toFixed(2) : ''\n          } ETH`}\n        </Typography>\n      </Box>\n      <ResponsiveContainer width={'80%'} height={300} min-width={300}>\n        <LineChart\n          data={floorPrices}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 15,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#eee\" />\n          <XAxis\n            dataKey=\"name\"\n            stroke=\"#dc982c\"\n            label={{\n              value: 'Time',\n              position: 'center',\n              fill: '#dc982c',\n              transform: 'translate(0, 15)',\n            }}\n            padding={{ right: 0, bottom: 100 }}\n            // tick={{ transform: 'translate(0, 3)' }}\n            // dy={10}\n            // tick={false}\n          />\n          <YAxis\n            stroke=\"#dc982c\"\n            label={{\n              value: '$ USD',\n              angle: -90,\n              position: 'insideLeft',\n              fill: '#dc982c',\n            }}\n            dx={2}\n            // tick={false}\n          />\n          <Tooltip content={<CustomFloorTooltip />} />\n          {/* <Legend /> */}\n          <Line\n            type=\"monotone\"\n            dataKey=\"floor\"\n            stroke=\"#dc982c\"\n            // activeDot={{ r: 8 }}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n      <Box sx={{ justifyContent: 'flex-start', width: '80%' }}>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            display: 'block',\n            color: 'black',\n            textDecoration: 'none',\n            fontSize: 22,\n            '@media (min-width: 768px)': {\n              WebkitTextStroke: '2px #d89810',\n              fontSize: 32,\n            },\n            '@media (min-width: 1024px)': {\n              fontSize: 42,\n            },\n            WebkitTextStroke: '1px #d89810',\n          }}\n        >\n          #NFTs You Hold : {tokenIds.length - usedTokenIdsOf.length}\n          <br />\n          Your Claimable Value After Unlock :\n          {` $ ${\n            tvcl > 0 ? ((tvcl / 1750) * (tokenIds.length - usedTokenIdsOf.length)).toFixed(2) : ''\n          } `}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Vault;\n","import sidebarURL from 'assets/images/widesidebar.jpg';\nimport MainContainer from 'components/MainContainer';\n// import MintStatus from 'pages/MintPage/MintStatus';\n// import NFTCarousel from 'pages/MintPage/NFTCarousel';\n// import RoadMap from 'pages/MintPage/RoadMap';\n// import SecretSauce from 'pages/MintPage/SecretSauce';\n// import TeamInfo from 'pages/MintPage/TeamInfo';\nimport Vault from 'pages/AnalyticsPage/Vault';\n// import { useEffect } from 'react';\nimport React from 'react';\nimport LazyLoad from 'react-lazyload';\n// import { store } from 'store';\n// import { setCurrentPhase, setCurrentTokenId, setPrice } from 'store/actions/globalActions';\n\nimport { Box } from '@mui/material';\n\nfunction AnalyticsPage() {\n  //   useEffect(() => {\n  //     store.dispatch(setCurrentPhase());\n  //     store.dispatch(setPrice());\n  //     store.dispatch(setCurrentTokenId());\n  //   }, []);\n\n  return (\n    <MainContainer>\n      <Box\n        sx={{\n          width: '100%',\n        }}\n      >\n        <LazyLoad height={200}>\n          <Box\n            sx={{\n              display: 'black',\n              height: '80px',\n              backgroundImage: `url(${sidebarURL})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'left top',\n              '@media (min-width: 768px)': {\n                height: '120px',\n              },\n              '@media (min-width: 769px)': {\n                display: 'none',\n              },\n            }}\n          />\n        </LazyLoad>\n        <Vault />\n        {/* <MintStatus />\n        <NFTCarousel />\n        <Box\n          sx={{\n            marginBottom: '13px',\n            '@media (min-width: 769px)': {\n              display: 'grid',\n              columnGap: '35px',\n              gridTemplateColumns: 'repeat(2, 1fr)',\n            },\n          }}\n        >\n          <SecretSauce />\n          <RoadMap />\n        </Box>\n        <Vault />\n        <TeamInfo /> */}\n      </Box>\n    </MainContainer>\n  );\n}\n\nexport default AnalyticsPage;\n"],"names":["configAlchemy","apiKey","network","Network","alchemy","Alchemy","getFloorPrice","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$alchemy$nft$ge","openSea","wrap","_context","prev","next","nft","sent","abrupt","floorPrice","stop","apply","arguments","PRICE_URL","TYPE_PERIOD","CustomFloorTooltip","active","payload","label","length","_jsxs","Box","sx","padding","children","Typography","fontFamily","color","textDecoration","fontSize","value","CustomVaultTooltip","_ref2","toFixed","_ref3","_useState","useState","_useState2","_slicedToArray","prices","setPrices","_useState3","_useState4","floorPrices","setFloorPrices","_useState5","_useState6","floor","setFloor","_useState7","_useState8","tvcl","setTVCL","_useState9","_useState10","amountList","setAmountList","_useState11","_useState12","ethPrice","setEthPrice","getPriceData","_ref4","coin","res","_yield$res$json","fetch","concat","mode","json","_x","getFloorData","_ref5","_callee2","_context2","config","coinPromises","map","_useWeb3React","useWeb3React","account","_useAppSelector","useAppSelector","state","global","tokenIds","claimable","usedTokenIdsOf","disconnectWallet","useDisconnectWallet","data","useFetch","getAll","_ref6","_callee3","floorData","floorValues","lengths","minLength","newRes","i","latest","totalAmount","assetAmountList","newUSD","_context3","reverse","name","moment","timestamp","format","eth","price","Promise","all","item","Math","min","_toConsumableArray","val","push","chainlink","hex","laika","ethereum","index","subtract","date","Vault","console","log","slice","getFloor","_ref7","_callee4","_context4","useEffect","store","setTokenIds","setUsedTokenIdsOf","onClaim","_ref8","_callee5","remain","tx","_context5","filter","id","includes","assetService","toast","handleExit","_ref9","_callee6","_context6","_objectSpread","backgroundImage","vaultImage","backgroundRepeat","backgroundSize","backgroundPosition","position","display","flexDirection","justifyContent","alignItems","marginBottom","_jsx","right","top","width","height","cursor","onClick","component","src","exitImg","letterSpacing","WebkitTextStroke","rowGap","columnGap","gridTemplateColumns","asset","Link","target","href","marginTop","flex","flexBasis","maxWidth","margin","textAlign","Number","amount","symbol","Button","backgroundColor","border","borderRadius","lineHeight","transform","opacity","disabled","ResponsiveContainer","LineChart","left","bottom","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","fill","YAxis","angle","dx","Tooltip","content","Line","type","activeDot","r","dot","MainContainer","LazyLoad","sidebarURL"],"sourceRoot":""}