{"version":3,"file":"static/js/375.7509705f.chunk.js","mappings":"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","sources":["utils/alchemy.js","pages/AnalyticsPage/Vault/index.jsx","pages/AnalyticsPage/index.jsx"],"sourcesContent":["import { Alchemy, Network } from 'alchemy-sdk';\n\nconst configAlchemy = {\n  apiKey: '6J04CoEooT-xq4ZMGdbAeY1VcNBsAEPt',\n  network: Network.ETH_MAINNET,\n};\n\nconst alchemy = new Alchemy(configAlchemy);\n\nexport const getFloorPrice = async () => {\n  const address = '0x6B302B295955954311e4622BDCCCCF52796422fA';\n  const { openSea } = await alchemy.nft.getFloorPrice(address);\n  return openSea.floorPrice;\n};\n","import vaultImage from 'assets/images/vault_team_noletter.jpg';\nimport config from 'config';\nimport useFetch from 'hooks/useFetch';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  CartesianGrid,\n  // Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport { assetService } from 'services/blockchain/assetService';\nimport { store } from 'store';\nimport { useAppSelector } from 'store';\nimport { setTokenIds, setUsedTokenIdsOf } from 'store/actions/globalActions';\nimport { getFloorPrice } from 'utils/alchemy';\n\nimport { Box, Button, Link, Typography } from '@mui/material';\nimport { useWeb3React } from '@web3-react/core';\n\nconst PRICE_URL = 'https://api.coingecko.com/api/v3/coins/';\nconst TYPE_PERIOD = '/market_chart?vs_currency=usd&days=30/interval=1m';\n\nconst CustomFloorTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <Box sx={{ padding: '10px' }}>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            color: '#db9b13',\n            textDecoration: 'none',\n            fontSize: 16,\n          }}\n        >\n          Time: {label}\n        </Typography>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            color: '#db9b13',\n            textDecoration: 'none',\n            fontSize: 16,\n          }}\n        >\n          Floor: ${payload[0].value}\n        </Typography>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            color: '#db9b13',\n            textDecoration: 'none',\n            fontSize: 16,\n          }}\n        >\n          Backing: ${payload[1].value.toFixed(2)}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return null;\n};\n\nconst CustomVaultTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <Box sx={{ padding: '10px' }}>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            color: '#db9b13',\n            textDecoration: 'none',\n            fontSize: 16,\n          }}\n        >\n          Day: {label}\n        </Typography>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            color: '#db9b13',\n            textDecoration: 'none',\n            fontSize: 16,\n          }}\n        >\n          $ USD: {payload[0].value.toFixed(2)}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return null;\n};\n\nfunction Vault({ sx }) {\n  const [prices, setPrices] = useState();\n  const [floorPrices, setFloorPrices] = useState();\n  const [floor, setFloor] = useState();\n  const [tvcl, setTVCL] = useState();\n  const [amountList, setAmountList] = useState();\n  const [ethPrice, setEthPrice] = useState(0);\n\n  const coinlist = [\n    'chainlink',\n    'shiba-inu',\n    'dogelon-mars',\n    'pax-gold',\n    'quant-network',\n    'hex',\n    'usd-coin',\n    'old-bitcoin',\n    'laika',\n    'ethereum',\n  ];\n\n  const getPriceData = async (coin) => {\n    return fetch(`${PRICE_URL}${coin}${TYPE_PERIOD}`, {\n      mode: 'cors',\n      // credentials: 'include',\n    });\n  };\n\n  const getProcessedPriceData = async (response) => {\n    const promises = response.map((res) => res.json());\n    return Promise.all(promises);\n  };\n\n  const getFloorData = async () => {\n    const res = await fetch(`${config.apiBaseURL}floor`, {\n      mode: 'cors',\n      // credentials: 'include',\n    });\n    const prices = await res.json();\n    return prices;\n  };\n\n  const { active, account } = useWeb3React();\n  const { tokenIds, claimable, usedTokenIdsOf } = useAppSelector((state) => state.global);\n  const { data } = useFetch(`${config.apiBaseURL}coins`);\n\n  const getAll = async () => {\n    // setLoading(true);\n    try {\n      const floorData = await getFloorData();\n      const floorVals = floorData.reverse().map((data) => {\n        return {\n          name: moment.unix(data.timestamp).format('HH:mm'),\n          floor: (data.eth * data.price).toFixed(2),\n        };\n      });\n\n      console.log('1');\n      const coinPromises = coinlist.map((coin) => getPriceData(coin));\n      const apiRes = await Promise.all(coinPromises);\n      console.log('2');\n\n      const res = await getProcessedPriceData(apiRes);\n      const lengths = res.map(({ prices }) => prices.length);\n      const minLength = Math.min(...lengths);\n      const newRes = res.map(({ prices }) => prices.map((val) => val[1]));\n\n      let data = [];\n      for (let i = 0; i < minLength; i++) {\n        data.push({\n          chainlink: newRes[0][i],\n          'shiba-inu': newRes[1][i],\n          'dogelon-mars': newRes[2][i],\n          'pax-gold': newRes[3][i],\n          'quant-network': newRes[4][i],\n          hex: newRes[5][i],\n          'usd-coin': newRes[6][i],\n          'old-bitcoin': newRes[7][i],\n          laika: newRes[8][i],\n          ethereum: newRes[9][i],\n        });\n      }\n      // get latest price and calculate the proportion for each asset\n      const latest = minLength - 1;\n      let totalAmount =\n        data[latest]['chainlink'] * 408 +\n        data[latest]['shiba-inu'] * 100902622 +\n        data[latest]['dogelon-mars'] * 3445238310 +\n        data[latest]['pax-gold'] * 0.55 +\n        data[latest]['quant-network'] * 21.5 +\n        data[latest]['hex'] * 28404 +\n        data[latest]['laika'] * 17412306698 +\n        data[latest]['old-bitcoin'] * 27288 +\n        data[latest]['usd-coin'] * 1000;\n      setTVCL(totalAmount);\n      let assetAmountList = {\n        chainlink: data[latest]['chainlink'] * 408,\n        'shiba-inu': data[latest]['shiba-inu'] * 100902622,\n        'dogelon-mars': data[latest]['dogelon-mars'] * 3445238310,\n        'pax-gold': data[latest]['pax-gold'] * 0.55,\n        'quant-network': data[latest]['quant-network'] * 21.5,\n        hex: data[latest]['hex'] * 28404,\n        laika: data[latest]['laika'] * 17412306698,\n        'old-bitcoin': data[latest]['old-bitcoin'] * 27288,\n        'usd-coin': data[latest]['usd-coin'] * 1000,\n      };\n      setAmountList(assetAmountList);\n      setEthPrice(data[latest]['ethereum']);\n      const newUSD = data.map((item, index) => {\n        return {\n          name:\n            moment()\n              .subtract(minLength - index, 'days')\n              .date() == 1\n              ? moment()\n                  .subtract(minLength - index, 'days')\n                  .format('D MMM')\n              : moment()\n                  .subtract(minLength - index, 'days')\n                  .format('D'),\n          Vault:\n            item['chainlink'] * 408 +\n            item['shiba-inu'] * 100902622 +\n            item['dogelon-mars'] * 3445238310 +\n            item['pax-gold'] * 0.55 +\n            item['quant-network'] * 21.5 +\n            item['hex'] * 28404 +\n            item['laika'] * 17412306698 +\n            item['old-bitcoin'] * 27288 +\n            item['usd-coin'] * 1000,\n          // Floor: item['ethereum'] * floor,\n        };\n      });\n      setPrices(newUSD.slice(-20));\n      const floorValues = floorVals.map(({ name, floor }, index) => {\n        return {\n          name,\n          floor,\n          backing: newUSD.slice(-floorVals.length)[index]['Vault'] / 1750,\n        };\n      });\n      setFloorPrices(floorValues);\n      // setLoading(false);\n    } catch (e) {\n      // setLoading(false);\n      toast.error('Network request failed!');\n      console.log(e);\n    }\n  };\n\n  const getFloor = async () => {\n    const price = await getFloorPrice();\n    setFloor(price);\n  };\n\n  // useEffect(() => {\n  //   if (active) {\n  //     store.dispatch(setTokenIds(account));\n  //     store.dispatch(setUsedTokenIdsOf(account));\n  //     // config.tokens.map((token) => {\n  //     //   getTokenBalance(token);\n  //     // });\n  //   }\n  // }, [active, account]);\n\n  // useEffect(() => {\n  //   // getPriceData('chainlink');\n  // }, []);\n\n  useEffect(() => {\n    getFloor();\n    getAll();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onClaim = async () => {\n    const remain = tokenIds.filter((id) => !usedTokenIdsOf.includes(id));\n    let tx;\n    if (remain.length >= 100) {\n      tx = await assetService.claimAsset(account, remain.slice(0, 100));\n    } else {\n      tx = await assetService.claimAsset(account, remain);\n    }\n    if (tx !== null) {\n      toast.success('Successfully claimed!');\n      store.dispatch(setUsedTokenIdsOf(account));\n      store.dispatch(setTokenIds(account));\n    }\n  };\n\n  console.log('floor', floorPrices);\n\n  return (\n    <Box\n      sx={{\n        backgroundImage: `url(${vaultImage})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center top',\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: '0 0 50px 0',\n        '@media (min-width: 425px)': {\n          padding: '0 0 50px 0',\n        },\n        '@media (min-width: 768px)': {\n          padding: '0 0 50px 0',\n        },\n        '@media (min-width: 1024px)': {\n          padding: '0 0 100px 0',\n        },\n        '@media (min-width: 1440px)': {\n          padding: '0 0 100px 0',\n        },\n        '@media (min-width: 1920px)': {\n          padding: '0 0 100px 0',\n        },\n        marginBottom: '15px',\n        ...sx,\n      }}\n    >\n      {/* {loading && <Box>Loading</Box>} */}\n      <Box\n        sx={{\n          padding: '25px 0 40px 0',\n          '@media (min-width: 375px)': {\n            padding: '25px 0 30px 0',\n          },\n          '@media (min-width: 425px)': {\n            padding: '20px 0',\n          },\n          '@media (min-width: 768px)': {\n            padding: '30px 0',\n          },\n          '@media (min-width: 1024px)': {\n            padding: '40px 0',\n          },\n          '@media (min-width: 1440px)': {\n            padding: '15px 0',\n          },\n          '@media (min-width: 1920px)': {\n            padding: '30px 0',\n          },\n        }}\n      >\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            color: '#db9b13',\n            textDecoration: 'none',\n            fontSize: 30,\n            '@media (min-width: 425px)': {\n              fontSize: 40,\n            },\n            '@media (min-width: 768px)': {\n              fontSize: 60,\n              letterSpacing: 5,\n            },\n            '@media (min-width: 1024px)': {\n              fontSize: 70,\n              letterSpacing: 10,\n            },\n            '@media (min-width: 1440px)': {\n              fontSize: 90,\n              letterSpacing: 15,\n            },\n            '@media (min-width: 1920px)': {\n              fontSize: 110,\n              letterSpacing: 20,\n            },\n          }}\n        >\n          Analytics Dashboard\n        </Typography>\n      </Box>\n      <Box sx={{ justifyContent: 'flex-start', width: '80%' }}>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            display: 'block',\n            color: 'black',\n            textDecoration: 'none',\n            fontSize: 22,\n            '@media (min-width: 768px)': {\n              WebkitTextStroke: '2px #d89810',\n              fontSize: 32,\n            },\n            '@media (min-width: 1024px)': {\n              fontSize: 42,\n            },\n            WebkitTextStroke: '1px #d89810',\n          }}\n        >\n          Total Claimable Value Locked(TCVL): {`$${tvcl ? tvcl.toFixed(2) : ''}`}\n          <br />\n          Vault Backing Per NFT:{' '}\n          {`$${tvcl ? (tvcl / config.totalSupply).toFixed(2) : ''} / ${\n            ethPrice > 0 ? (tvcl / config.totalSupply / ethPrice).toFixed(3) : ''\n          } ETH`}\n        </Typography>\n      </Box>\n      {!active && (\n        <Box\n          sx={{\n            display: 'grid',\n            rowGap: 2,\n            columnGap: 4,\n            width: '80%',\n            '@media (min-width: 1025px)': {\n              gridTemplateColumns: 'repeat(1, 1fr)',\n            },\n            justifyContent: 'flex-start',\n          }}\n        >\n          {config['assets'] &&\n            config['assets'].map((asset, index) => (\n              <Link\n                key={`Vaults-Link${index}`}\n                target=\"_blank\"\n                href={config['coinGeckoBaseUrl'] + asset['url']}\n                sx={{\n                  fontFamily: 'LapsusBold',\n                  display: 'block',\n                  color: 'black',\n                  textDecoration: 'none',\n                  fontSize: 20,\n                  '@media (min-width: 768px)': {\n                    WebkitTextStroke: '2px #d89810',\n                    fontSize: 30,\n                  },\n                  '@media (min-width: 1024px)': {\n                    fontSize: 40,\n                  },\n                  WebkitTextStroke: '1px #d89810',\n                }}\n              >\n                {`${asset['name']} (${asset['symbol']}) / ${\n                  amountList\n                    ? `$${amountList[asset['url']] ? amountList[asset['url']].toFixed(2) : ''} / ${\n                        amountList[asset['url']]\n                          ? ((amountList[asset['url']] / tvcl) * 100.0).toFixed(2)\n                          : ''\n                      }%`\n                    : ''\n                }`}\n              </Link>\n            ))}\n        </Box>\n      )}\n      {active && (\n        <Box\n          sx={{\n            marginTop: '20px',\n            width: '90%',\n            '@media (min-width: 1024px)': {\n              marginTop: '50px',\n            },\n          }}\n          flex\n          flexBasis=\"column\"\n          alignItems=\"center\"\n        >\n          <Box\n            sx={{\n              maxWidth: '700px',\n              margin: 'auto',\n            }}\n          >\n            {data &&\n              data.map((coin, index) => {\n                if (index === 2) {\n                  return (\n                    <Typography\n                      key={`Asset-${index}`}\n                      sx={{\n                        fontFamily: 'LapsusBold',\n                        fontSize: 23,\n                        '@media (min-width: 425px)': {\n                          fontSize: 25,\n                        },\n                        '@media (min-width: 768px)': {\n                          WebkitTextStroke: '2px #d89810',\n                          fontSize: 40,\n                        },\n                        '@media (min-width: 1024px)': {\n                          fontSize: 50,\n                        },\n                        textAlign: 'left',\n                        WebkitTextStroke: '1px #d89810',\n                      }}\n                    >\n                      {`${coin.name}: ${Number(\n                        ((tokenIds.length - usedTokenIdsOf.length) * coin.amount) /\n                          config.totalSupply,\n                      ).toFixed(0)} ${coin.symbol}`}\n                    </Typography>\n                  );\n                } else {\n                  return (\n                    <Typography\n                      key={`Asset-${index}`}\n                      sx={{\n                        fontFamily: 'LapsusBold',\n                        fontSize: 23,\n                        '@media (min-width: 425px)': {\n                          fontSize: 25,\n                        },\n                        '@media (min-width: 768px)': {\n                          WebkitTextStroke: '2px #d89810',\n                          fontSize: 40,\n                        },\n                        '@media (min-width: 1024px)': {\n                          fontSize: 50,\n                        },\n                        textAlign: 'left',\n                        WebkitTextStroke: '1px #d89810',\n                      }}\n                    >\n                      {`${coin.name}: ${Number(\n                        ((tokenIds.length - usedTokenIdsOf.length) * coin.amount) /\n                          config.totalSupply,\n                      ).toFixed(4)} ${coin.symbol}`}\n                    </Typography>\n                  );\n                }\n              })}\n          </Box>\n          <Box textAlign=\"center\">\n            <Button\n              sx={{\n                marginTop: '30px',\n                cursor: 'pointer',\n                width: '70%',\n                fontFamily: 'LapsusBold',\n                fontSize: '20px',\n                padding: '15px 10px',\n                '@media (min-width: 768px)': {\n                  marginTop: '70px',\n                  fontSize: 40,\n                },\n                '@media (min-width: 1024px)': {\n                  fontSize: 50,\n                },\n                color: '#fac718',\n                backgroundColor: 'black',\n                border: '10px solid white',\n                borderRadius: '60px',\n                maxWidth: '900px',\n                lineHeight: '1',\n                letterSpacing: '7px',\n                transform: 'rotate(-5deg)',\n                opacity: claimable && tokenIds.length - usedTokenIdsOf.length !== 0 ? 1 : 0.3,\n                '&:disabled': {\n                  color: '#fac718',\n                },\n                '&:hover': {\n                  backgroundColor: 'rgba(0, 0, 0, 0.7)',\n                },\n              }}\n              onClick={onClaim}\n              disabled={!claimable || tokenIds.length - usedTokenIdsOf.length === 0}\n            >\n              CLAIM YOUR ASSETS NOW\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Box sx={{ justifyContent: 'flex-start', width: '80%' }}>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            display: 'block',\n            color: 'black',\n            textDecoration: 'none',\n            fontSize: 22,\n            '@media (min-width: 768px)': {\n              WebkitTextStroke: '2px #d89810',\n              fontSize: 32,\n            },\n            '@media (min-width: 1024px)': {\n              fontSize: 42,\n            },\n            WebkitTextStroke: '1px #d89810',\n          }}\n        >\n          Sugar Heads Vault Portfolio\n        </Typography>\n      </Box>\n      <ResponsiveContainer width={'80%'} height={300} min-width={300}>\n        <LineChart\n          data={prices}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 15,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#eee\" />\n          <XAxis\n            dataKey=\"name\"\n            stroke=\"#dc982c\"\n            label={{\n              value: 'Time',\n              position: 'center',\n              fill: '#dc982c',\n              transform: 'translate(0, 15)',\n            }}\n            // dy={10}\n            // tick={false}\n          />\n          <YAxis\n            stroke=\"#dc982c\"\n            label={{\n              value: '$ USD',\n              angle: -90,\n              position: 'insideLeft',\n              fill: '#dc982c',\n            }}\n            dx={2}\n            // tick={false}\n          />\n          <Tooltip content={<CustomVaultTooltip />} />\n          <Line type=\"monotone\" dataKey=\"Vault\" stroke=\"#dc982c\" activeDot={{ r: 8 }} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n      <Box sx={{ justifyContent: 'flex-start', width: '80%' }}>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            display: 'block',\n            color: 'black',\n            textDecoration: 'none',\n            fontSize: 22,\n            '@media (min-width: 768px)': {\n              WebkitTextStroke: '2px #d89810',\n              fontSize: 32,\n            },\n            '@media (min-width: 1024px)': {\n              fontSize: 42,\n            },\n            WebkitTextStroke: '1px #d89810',\n          }}\n        >\n          NFT Analytics\n          <br />\n          Floor Price :\n          {` $ ${ethPrice > 0 ? (floor * ethPrice).toFixed(3) : ''} / ${\n            floor ? floor.toFixed(2) : ''\n          } ETH`}\n        </Typography>\n      </Box>\n      <ResponsiveContainer width={'80%'} height={300} min-width={300}>\n        <LineChart\n          data={floorPrices}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 15,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#eee\" />\n          <XAxis\n            dataKey=\"name\"\n            stroke=\"#dc982c\"\n            label={{\n              value: 'Time',\n              position: 'center',\n              fill: '#dc982c',\n              transform: 'translate(0, 15)',\n            }}\n            padding={{ right: 0, bottom: 100 }}\n            // tick={{ transform: 'translate(0, 3)' }}\n            // dy={10}\n            // tick={false}\n          />\n          <YAxis\n            stroke=\"#dc982c\"\n            label={{\n              value: '$ USD',\n              angle: -90,\n              position: 'insideLeft',\n              fill: '#dc982c',\n            }}\n            dx={2}\n            // tick={false}\n          />\n          <Tooltip content={<CustomFloorTooltip />} />\n          {/* <Legend /> */}\n          <Line\n            type=\"monotone\"\n            dataKey=\"floor\"\n            stroke=\"#dc982c\"\n            // activeDot={{ r: 8 }}\n            dot={false}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"backing\"\n            stroke=\"#dc982c\"\n            // activeDot={{ r: 8 }}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n      <Box sx={{ justifyContent: 'flex-start', width: '80%' }}>\n        <Typography\n          sx={{\n            fontFamily: 'LapsusBold',\n            display: 'block',\n            color: 'black',\n            textDecoration: 'none',\n            fontSize: 22,\n            '@media (min-width: 768px)': {\n              WebkitTextStroke: '2px #d89810',\n              fontSize: 32,\n            },\n            '@media (min-width: 1024px)': {\n              fontSize: 42,\n            },\n            WebkitTextStroke: '1px #d89810',\n          }}\n        >\n          #NFTs You Hold : {tokenIds.length - usedTokenIdsOf.length}\n          <br />\n          Your Claimable Value After Unlock :\n          {` $ ${\n            tvcl > 0 ? ((tvcl / 1750) * (tokenIds.length - usedTokenIdsOf.length)).toFixed(2) : ''\n          } `}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Vault;\n","import sidebarURL from 'assets/images/widesidebar.jpg';\nimport MainContainer from 'components/MainContainer';\n// import MintStatus from 'pages/MintPage/MintStatus';\n// import NFTCarousel from 'pages/MintPage/NFTCarousel';\n// import RoadMap from 'pages/MintPage/RoadMap';\n// import SecretSauce from 'pages/MintPage/SecretSauce';\n// import TeamInfo from 'pages/MintPage/TeamInfo';\nimport Vault from 'pages/AnalyticsPage/Vault';\n// import { useEffect } from 'react';\nimport React from 'react';\nimport LazyLoad from 'react-lazyload';\n// import { store } from 'store';\n// import { setCurrentPhase, setCurrentTokenId, setPrice } from 'store/actions/globalActions';\n\nimport { Box } from '@mui/material';\n\nfunction AnalyticsPage() {\n  //   useEffect(() => {\n  //     store.dispatch(setCurrentPhase());\n  //     store.dispatch(setPrice());\n  //     store.dispatch(setCurrentTokenId());\n  //   }, []);\n\n  return (\n    <MainContainer>\n      <Box\n        sx={{\n          width: '100%',\n        }}\n      >\n        <LazyLoad height={200}>\n          <Box\n            sx={{\n              display: 'black',\n              height: '80px',\n              backgroundImage: `url(${sidebarURL})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'left top',\n              '@media (min-width: 768px)': {\n                height: '120px',\n              },\n              '@media (min-width: 769px)': {\n                display: 'none',\n              },\n            }}\n          />\n        </LazyLoad>\n        <Vault />\n        {/* <MintStatus />\n        <NFTCarousel />\n        <Box\n          sx={{\n            marginBottom: '13px',\n            '@media (min-width: 769px)': {\n              display: 'grid',\n              columnGap: '35px',\n              gridTemplateColumns: 'repeat(2, 1fr)',\n            },\n          }}\n        >\n          <SecretSauce />\n          <RoadMap />\n        </Box>\n        <Vault />\n        <TeamInfo /> */}\n      </Box>\n    </MainContainer>\n  );\n}\n\nexport default AnalyticsPage;\n"],"names":["configAlchemy","apiKey","network","Network","alchemy","Alchemy","getFloorPrice","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$alchemy$nft$ge","openSea","wrap","_context","prev","next","nft","sent","abrupt","floorPrice","stop","apply","arguments","PRICE_URL","TYPE_PERIOD","CustomFloorTooltip","active","payload","label","length","_jsxs","Box","sx","padding","children","Typography","fontFamily","color","textDecoration","fontSize","value","toFixed","CustomVaultTooltip","_ref2","_ref3","_useState","useState","_useState2","_slicedToArray","prices","setPrices","_useState3","_useState4","floorPrices","setFloorPrices","_useState5","_useState6","floor","setFloor","_useState7","_useState8","tvcl","setTVCL","_useState9","_useState10","amountList","setAmountList","_useState11","_useState12","ethPrice","setEthPrice","coinlist","getPriceData","_ref4","coin","fetch","concat","mode","_x","getProcessedPriceData","_ref5","_callee2","response","promises","_context2","map","res","json","Promise","all","_x2","getFloorData","_ref6","_callee3","_context3","config","_useWeb3React","useWeb3React","account","_useAppSelector","useAppSelector","state","global","tokenIds","claimable","usedTokenIdsOf","data","useFetch","getAll","_ref7","_callee4","floorData","floorVals","coinPromises","apiRes","lengths","minLength","newRes","_data","i","latest","totalAmount","assetAmountList","newUSD","floorValues","_context4","reverse","name","moment","timestamp","format","eth","price","console","log","_ref8","Math","min","_toConsumableArray","_ref9","val","push","chainlink","hex","laika","ethereum","item","index","subtract","date","Vault","slice","_ref10","backing","t0","toast","getFloor","_ref11","_callee5","_context5","useEffect","onClaim","_ref12","_callee6","remain","tx","_context6","filter","id","includes","assetService","store","setUsedTokenIdsOf","setTokenIds","_objectSpread","backgroundImage","vaultImage","backgroundRepeat","backgroundSize","backgroundPosition","position","display","flexDirection","justifyContent","alignItems","marginBottom","_jsx","letterSpacing","width","WebkitTextStroke","rowGap","columnGap","gridTemplateColumns","asset","Link","target","href","marginTop","flex","flexBasis","maxWidth","margin","textAlign","Number","amount","symbol","Button","cursor","backgroundColor","border","borderRadius","lineHeight","transform","opacity","onClick","disabled","ResponsiveContainer","height","LineChart","top","right","left","bottom","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","fill","YAxis","angle","dx","Tooltip","content","Line","type","activeDot","r","dot","MainContainer","LazyLoad","sidebarURL"],"sourceRoot":""}